@page "/tabla"
@using EjemploModelado.Web.Domain.Builder
@using EjemploModelado.Web.Domain.ServiceModel
@using EjemploModelado.Web.Domain.Services

<h3>Tabla</h3>

@if (computadoras.Count == 0)
{
    <div>
        <h4>No hay computadoras. Genera más con el formulario.</h4>
    </div>
}
else
{
    <section>
        <div>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Memoria RAM (GB)</th>
                        <th>Almacenamiento (GB)</th>
                        <th>Núcleos del Procesador</th>
                        <th>Puertos USB</th>
                        <th>Componentes</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var computadora in computadoras)
                    {
                        @if(computadora.MemoriaRam != 0 || computadora.NucleosProcesador != 0)
                        {
                            <tr>
                                <td>@computadora.MemoriaRam</td>
                                <td>@computadora.Almacenamiento</td>
                                <td>@computadora.NucleosProcesador</td>
                                <td>@computadora.PuertosUsb</td>
                                <td>
                                    @if (componentesComputadora.ContainsKey(computadora) && componentesComputadora[computadora] != null)
                                    {
                                        foreach (var componente in componentesComputadora[computadora])
                                        {
                                            <div>@componente.Descripcion</div>
                                        }
                                    }
                                    else
                                    {
                                        <div>No hay componentes asociados</div>
                                    }
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </section>
}

@code {
    List<ComputadoraModel> computadoras = new List<ComputadoraModel>();
    List<Componente> componentes = new List<Componente>();
    Dictionary<ComputadoraModel, List<Componente>> componentesComputadora = new Dictionary<ComputadoraModel, List<Componente>>();

    protected override async Task OnInitializedAsync()
    {
        computadoras = await ApiServiceComputadora.Singleton().GetComputadoras();
        componentes = await ApiServiceComponente.Singleton().GetComponentes();
        /*
        foreach (var computadora in computadoras)
        {
            if(computadora.MemoriaRam != 0 || computadora.NucleosProcesador != 0)
            {
                var componentesAsociados = componentes.Where(c => computadora.ComponentesIds.Contains(c.Id)).ToList();
                componentesComputadora.Add(computadora, componentesAsociados);
                Console.WriteLine("Componentes " + componentesAsociados.Count);
            }

        }*/
    }
}
